@using Blazored.LocalStorage;
@if (IsUserAuthenticated)
{
    <div class="top-nav p-1">
        <div>
            <a href="/"><img src="/LogoSmall.png" style="width: 70px;"></a>
            <a href="/News">News</a>
            <a href="/">Standings</a>
            <a href="/">Gaming</a>
            <a href="/">Store</a>
        </div>
        <div>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
                <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
                <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1" />
            </svg>
            <a class="ms-0" href="/Account">@UserName</a>
            <a href="/" @onclick="Logout">Logout</a>
        </div>
    </div>
}
else
{
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <a href="/"><img src="/LogoSmall.png" style="width: 70px;"></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="/News">News</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/">Standings</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/">Gaming</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/">Store</a>
                    </li>
                </ul>
                <ul class="navbar-nav mb-2 mb-lg-0 d-flex">
                    <li class="nav-item">
                        <a class="nav-link" href="/Login">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Register">Register</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Bootstrap JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
}
@code {
    private bool collapseNavMenu = true;

    private bool IsUserAuthenticated { get; set; }
    private string UserName { get; set; }

    [Inject] private AuthenticationStateProvider _authenticationStateProvider { get; set; }
    [Inject] private NavigationManager _navigationManager { get; set; }
    [Inject] private ILocalStorageService _localStorage { get; set; }


    protected override async Task OnInitializedAsync()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        IsUserAuthenticated = authState.User.Identity.IsAuthenticated;
        var user = authState.User;

        if (IsUserAuthenticated)
        {
            UserName = user.Identity.Name;
        }
    }

    private async void Logout()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            await ClearToken();

            
            _navigationManager.NavigateTo("/", true);
        }

    }

    private async Task ClearToken()
    {
        await _localStorage.RemoveItemAsync("authToken");
    }

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
