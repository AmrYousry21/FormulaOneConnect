@using FormulaOneConnect.Client.Services.Interfaces;
@using FormulaOneConnect.Shared.DTOs;

<EditForm Model="loginDto" OnValidSubmit="Submit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="loginDto!.Email" class="form-control"></InputText>
        <ValidationMessage For="() => loginDto.Email" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="loginDto!.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="() => loginDto.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
    <button type="button" class="btn btn-primary" @onclick="Reset">Reset</button>
</EditForm>

@code {
    [Inject] private IAuthenticationService _authenticationService { get; set; } = default!;

    private LoginDto? loginDto;

    protected override void OnInitialized()
    {
        loginDto = new();
    }

    private async Task Submit()
    {
        var response = await _authenticationService.Login(loginDto);
        if (response.IsSuccessStatusCode)
        {

        }
    }

    private void Reset()
    {
        loginDto = new();
    }
}
